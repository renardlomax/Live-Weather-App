[{"C:\\Users\\renar\\weather-api\\src\\index.js":"1","C:\\Users\\renar\\weather-api\\src\\reportWebVitals.js":"2","C:\\Users\\renar\\weather-api\\src\\App.js":"3"},{"size":548,"mtime":1627869661788,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1627745952315,"results":"6","hashOfConfig":"5"},{"size":2061,"mtime":1628003069167,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15b94a0",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\renar\\weather-api\\src\\index.js",[],"C:\\Users\\renar\\weather-api\\src\\reportWebVitals.js",[],"C:\\Users\\renar\\weather-api\\src\\App.js",["15","16"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {Table} from 'react-bootstrap';\n\n\n\n\nfunction App() {\n  const [humidity, setHumidity] = useState('')\n  const [country, setCountry] = useState('')\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState('')\n  const [temperature, setTemperature] = useState(0);\n  const [cityname, setCityname] = useState('')\n  const [wind, setWind] = useState('')\n\n  const savePosition = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }\n\n const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePosition)\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=fa9a38080dd2fb9c9a14ccae3b82a1c6&units=metric`);\n      console.log(response.data)\n      setCountry(response.data.sys.country)\n      setTemperature(Math.ceil(response.data.main.temp* 9 / 5 + 32 )) ;\n      setCityname(response.data.name);\n      setWind(response.data.wind.speed);\n      setWeather(response.data.weather[0].description);\n      setHumidity(response.data.main.humidity);\n    } catch (err) {\n      console.log(err);\n    }\n    }\n    \n   \n  \n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n  \n    return (\n      <section>\n        \n        <div className=\"App\">\n        <div className=\"app__container\">\n          <div className=\"h1\">\n            <h1>Weather App</h1>\n          </div>\n          \n          <div className=\"h2\">\n            <br/>\n            <br/>\n            <h3> Country: {country}</h3>\n            <h3> Location: {cityname}</h3>\n            <h3> Temperature: {temperature}â„‰</h3>\n            <h3> Weather: {weather}</h3>\n            <h3> Wind: {wind} mph</h3>\n            <h3> Humidity: {humidity} %</h3>\n          </div>\n        </div>\n       </div>\n      \n      </section>\n     \n    );\n}\n\nexport default App;\n",{"ruleId":"17","severity":1,"message":"18","line":4,"column":9,"nodeType":"19","messageId":"20","endLine":4,"endColumn":14},{"ruleId":"21","severity":1,"message":"22","line":44,"column":6,"nodeType":"23","endLine":44,"endColumn":27,"suggestions":"24"},"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWeather'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [fetchWeather, latitude, longitude]",{"range":"28","text":"29"},[1399,1420],"[fetchWeather, latitude, longitude]"]