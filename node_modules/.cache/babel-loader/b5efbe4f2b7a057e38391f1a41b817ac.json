{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renar\\\\weather-api\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [humidity, setHumidity] = useState('');\n  const [country, setCountry] = useState('');\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState('');\n  const [temperature, setTemperature] = useState(0);\n  const [cityname, setCityname] = useState('');\n  const [wind, setWind] = useState('');\n\n  const savePosition = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePosition);\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=fa9a38080dd2fb9c9a14ccae3b82a1c6&units=metric`);\n      console.log(response.data);\n      setCountry(response.data.sys.country);\n      setTemperature(response.data.main.temp);\n      setCityname(response.data.name);\n      setWind(response.data.wind.speed);\n      setWeather(response.data.weather[0].description);\n      setHumidity(response.data.main.humidity);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const convertWeatherDegree = temperature => {\n    var cTemp = temperature;\n    var cToFahr = cTemp * 9 / 5 + 32;\n    var message = cTemp + '\\xB0C is ' + cToFahr + ' \\xB0F.';\n    console.log(message);\n    console.log(cTemp);\n  };\n\n  co;\n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h1\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Weather App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h2\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" Country: \", country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" Location: \", cityname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Temperature: \", temperature, \" \\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Weather: \", weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Wind: \", wind, \" mph\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Humidity: \", humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"eyvENk1CQc+vo20qHjMxp1u1XBM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/renar/weather-api/src/App.js"],"names":["axios","useEffect","useState","Table","App","humidity","setHumidity","country","setCountry","latitude","setLatitude","longitude","setLongitude","weather","setWeather","temperature","setTemperature","cityname","setCityname","wind","setWind","savePosition","position","coords","fetchWeather","window","navigator","geolocation","getCurrentPosition","response","get","console","log","data","sys","main","temp","name","speed","description","err","convertWeatherDegree","cTemp","cToFahr","message","co"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {Table} from 'react-bootstrap';\n\n\n\n\nfunction App() {\n  const [humidity, setHumidity] = useState('')\n  const [country, setCountry] = useState('')\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState('')\n  const [temperature, setTemperature] = useState(0);\n  const [cityname, setCityname] = useState('')\n  const [wind, setWind] = useState('')\n\n  const savePosition = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }\n\n const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePosition)\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=fa9a38080dd2fb9c9a14ccae3b82a1c6&units=metric`);\n      console.log(response.data)\n      setCountry(response.data.sys.country)\n      setTemperature(response.data.main.temp);\n      setCityname(response.data.name);\n      setWind(response.data.wind.speed);\n      setWeather(response.data.weather[0].description);\n      setHumidity(response.data.main.humidity);\n    } catch (err) {\n      console.log(err);\n    }\n    }\n    const convertWeatherDegree = (temperature) => {\n      var cTemp = temperature;\n      var cToFahr = cTemp * 9 / 5 + 32;\n      var message = cTemp+'\\xB0C is ' + cToFahr + ' \\xB0F.';\n        console.log(message);\n        console.log(cTemp)\n    }\n    co\n   \n  \n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n  \n    return (\n      <section>\n        \n        <div className=\"App\">\n        <div className=\"app__container\">\n          <div className=\"h1\">\n            <h1>Weather App</h1>\n          </div>\n          \n          <div className=\"h2\">\n            <br/>\n            <br/>\n            <h3> Country: {country}</h3>\n            <h3> Location: {cityname}</h3>\n            <h3>Temperature: {temperature} ℃</h3>\n            <h3>Weather: {weather}</h3>\n            <h3>Wind: {wind} mph</h3>\n            <h3>Humidity: {humidity}</h3>\n          </div>\n        </div>\n       </div>\n      \n      </section>\n     \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}