{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/renar/weather-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/renar/weather-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/renar/weather-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import{useEffect,useState}from'react';import'./App.css';import{Table}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),humidity=_useState2[0],setHumidity=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),latitude=_useState6[0],setLatitude=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),longitude=_useState8[0],setLongitude=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),weather=_useState10[0],setWeather=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),temperature=_useState12[0],setTemperature=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),cityname=_useState14[0],setCityname=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),wind=_useState16[0],setWind=_useState16[1];var savePosition=function savePosition(position){setLatitude(position.coords.latitude);setLongitude(position.coords.longitude);};var fetchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return window.navigator.geolocation.getCurrentPosition(savePosition);case 3:_context.next=5;return axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=fa9a38080dd2fb9c9a14ccae3b82a1c6&units=metric\"));case 5:response=_context.sent;console.log(response.data);setCountry(response.data.sys.country);setTemperature(Math.ceil(response.data.main.temp*9/5+32));setCityname(response.data.name);setWind(response.data.wind.speed);setWeather(response.data.weather[0].description);setHumidity(response.data.main.humidity);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function fetchWeather(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchWeather();},[latitude,longitude]);return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"app__container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h1\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"h2\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h3\",{children:[\" Country: \",country]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\" Location: \",cityname]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Temperature: \",temperature,\"\\u2109\"]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Weather: \",weather]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Wind: \",wind,\" mph\"]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Humidity: \",humidity,\" %\"]})]})]})})});}export default App;","map":{"version":3,"sources":["C:/Users/renar/weather-api/src/App.js"],"names":["axios","useEffect","useState","Table","App","humidity","setHumidity","country","setCountry","latitude","setLatitude","longitude","setLongitude","weather","setWeather","temperature","setTemperature","cityname","setCityname","wind","setWind","savePosition","position","coords","fetchWeather","window","navigator","geolocation","getCurrentPosition","get","response","console","log","data","sys","Math","ceil","main","temp","name","speed","description"],"mappings":"gbAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAO,WAAP,CACA,OAAQC,KAAR,KAAoB,iBAApB,C,wFAKA,QAASC,CAAAA,GAAT,EAAe,eACmBF,QAAQ,CAAC,EAAD,CAD3B,wCACNG,QADM,eACIC,WADJ,8BAEiBJ,QAAQ,CAAC,EAAD,CAFzB,yCAENK,OAFM,eAEGC,UAFH,8BAGmBN,QAAQ,CAAC,CAAD,CAH3B,yCAGNO,QAHM,eAGIC,WAHJ,8BAIqBR,QAAQ,CAAC,CAAD,CAJ7B,yCAINS,SAJM,eAIKC,YAJL,8BAKiBV,QAAQ,CAAC,EAAD,CALzB,0CAKNW,OALM,gBAKGC,UALH,gCAMyBZ,QAAQ,CAAC,CAAD,CANjC,2CAMNa,WANM,gBAMOC,cANP,gCAOmBd,QAAQ,CAAC,EAAD,CAP3B,2CAONe,QAPM,gBAOIC,WAPJ,gCAQWhB,QAAQ,CAAC,EAAD,CARnB,2CAQNiB,IARM,gBAQAC,OARA,gBAUb,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAc,CACjCZ,WAAW,CAACY,QAAQ,CAACC,MAAT,CAAgBd,QAAjB,CAAX,CACAG,YAAY,CAACU,QAAQ,CAACC,MAAT,CAAgBZ,SAAjB,CAAZ,CACD,CAHD,CAKD,GAAMa,CAAAA,YAAY,0FAAG,sLAEVC,CAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CAAgDP,YAAhD,CAFU,8BAGOrB,CAAAA,KAAK,CAAC6B,GAAN,+DAAiEpB,QAAjE,iBAAiFE,SAAjF,yDAHP,QAGVmB,QAHU,eAIhBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACAzB,UAAU,CAACsB,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAkB3B,OAAnB,CAAV,CACAS,cAAc,CAACmB,IAAI,CAACC,IAAL,CAAUN,QAAQ,CAACG,IAAT,CAAcI,IAAd,CAAmBC,IAAnB,CAAyB,CAAzB,CAA6B,CAA7B,CAAiC,EAA3C,CAAD,CAAd,CACApB,WAAW,CAACY,QAAQ,CAACG,IAAT,CAAcM,IAAf,CAAX,CACAnB,OAAO,CAACU,QAAQ,CAACG,IAAT,CAAcd,IAAd,CAAmBqB,KAApB,CAAP,CACA1B,UAAU,CAACgB,QAAQ,CAACG,IAAT,CAAcpB,OAAd,CAAsB,CAAtB,EAAyB4B,WAA1B,CAAV,CACAnC,WAAW,CAACwB,QAAQ,CAACG,IAAT,CAAcI,IAAd,CAAmBhC,QAApB,CAAX,CAVgB,iFAYhB0B,OAAO,CAACC,GAAR,cAZgB,qEAAH,kBAAZR,CAAAA,YAAY,0CAAlB,CAkBCvB,SAAS,CAAC,UAAM,CACduB,YAAY,GACb,CAFQ,CAEN,CAACf,QAAD,CAAWE,SAAX,CAFM,CAAT,CAIE,mBACE,sCAEE,YAAK,SAAS,CAAC,KAAf,uBACA,aAAK,SAAS,CAAC,gBAAf,wBACE,YAAK,SAAS,CAAC,IAAf,uBACE,mCADF,EADF,cAKE,aAAK,SAAS,CAAC,IAAf,wBACE,aADF,cAEE,aAFF,cAGE,mCAAeJ,OAAf,GAHF,cAIE,oCAAgBU,QAAhB,GAJF,cAKE,sCAAkBF,WAAlB,YALF,cAME,kCAAcF,OAAd,GANF,cAOE,+BAAWM,IAAX,UAPF,cAQE,mCAAed,QAAf,QARF,GALF,GADA,EAFF,EADF,CAyBH,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {Table} from 'react-bootstrap';\n\n\n\n\nfunction App() {\n  const [humidity, setHumidity] = useState('')\n  const [country, setCountry] = useState('')\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState('')\n  const [temperature, setTemperature] = useState(0);\n  const [cityname, setCityname] = useState('')\n  const [wind, setWind] = useState('')\n\n  const savePosition = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }\n\n const fetchWeather = async () => {\n    try {\n      await window.navigator.geolocation.getCurrentPosition(savePosition)\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=fa9a38080dd2fb9c9a14ccae3b82a1c6&units=metric`);\n      console.log(response.data)\n      setCountry(response.data.sys.country)\n      setTemperature(Math.ceil(response.data.main.temp* 9 / 5 + 32 )) ;\n      setCityname(response.data.name);\n      setWind(response.data.wind.speed);\n      setWeather(response.data.weather[0].description);\n      setHumidity(response.data.main.humidity);\n    } catch (err) {\n      console.log(err);\n    }\n    }\n    \n   \n  \n  useEffect(() => {\n    fetchWeather();\n  }, [latitude, longitude]);\n  \n    return (\n      <section>\n        \n        <div className=\"App\">\n        <div className=\"app__container\">\n          <div className=\"h1\">\n            <h1>Weather App</h1>\n          </div>\n          \n          <div className=\"h2\">\n            <br/>\n            <br/>\n            <h3> Country: {country}</h3>\n            <h3> Location: {cityname}</h3>\n            <h3>Temperature: {temperature}â„‰</h3>\n            <h3>Weather: {weather}</h3>\n            <h3>Wind: {wind} mph</h3>\n            <h3>Humidity: {humidity} %</h3>\n          </div>\n        </div>\n       </div>\n      \n      </section>\n     \n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}